{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","href","Alert","height","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","showAlert","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","elements","defaultProps","App","setMode","setAlert","massage","setTimeout","cls","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15357421.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#042743',\r\n        backgroundColor: props.mode === 'dark' ? 'rgb(63 63 147)' : 'white'\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h2 className=\"my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>About Us</h2>\r\n                <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Page Information\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                <strong>This is very </strong> Use full page for every one in his daily life ,\r\n                                any one can do lots of thing in this page And this page is  very light weight for load and uses very low internet ,\r\n                                this site is flexible with all type of devices like Iphone , Ipad , Mac, windows , android , linux , ubantu and Many more devices\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Convert Text as you want\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                <strong>You can convert </strong> the text into Upper case, Lower case,Reverse string and Copy converted text into Clipbord and past this text any where\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div  className=\"accordion-item\">\r\n                        <h2  className=\"accordion-header\" id=\"headingThree\">\r\n                            <button  className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                New Added Features\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\"  className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div  className=\"accordion-body\" style={myStyle}>\r\n                                <strong>New Features</strong> On customer demand we added the Dark mode and its working very good and support All the device\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <footer  className=\"text-center text-lg-start bg-light text-muted\">\r\n\r\n                <section\r\n                     className=\"d-flex justify-content-center justify-content-lg-between  border-bottom\"\r\n                >\r\n                </section>\r\n                <div  className=\"text-center\" style={{backgroundColor: 'black'}}>\r\n                    © 2021 Copyright : \r\n                    <a  className=\"text-reset fw-bold\" href=\"/\"> Amol Pardeshi</a>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n       {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <div className=\"d-flex\">\r\n                        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                        <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                        <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width: '30px',border:'2px solid pink'}}></div>\r\n                    </div> */}\r\n                    <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\"  onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About Us'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    const handleRevClick = () => {\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        setText(newText);\r\n        props.showAlert(\"String is Reverse\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text is Cleared\", \"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = (event) => {\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copy to Clipbord\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'rgb(63 63 147)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleRevClick}>String Reverse</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}> Copy </button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text summery</h2>\r\n                <p>{text.split(\" \").filter((elements) => { return elements.length !== 0 }).length} Words And , {text.length} Charaters</p>\r\n                <p>{0.008 * text.split(\" \").filter((elements) => { return elements.length !== 0 }).length} Minutes to read</p>\r\n                <h2>Priview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing To Priview\"}</p>\r\n            </div>\r\n            <footer className=\"text-center text-lg-start bg-light text-muted\">\r\n\r\n                <section\r\n                    className=\"d-flex justify-content-center justify-content-lg-between border-bottom\"\r\n                >\r\n                </section>\r\n                <div className=\"text-center \" style={{ backgroundColor: 'black' }}>\r\n                    © 2021 Copyright :\r\n                    <a className=\"text-reset fw-bold\" href=\"/\"> Amol Pardeshi</a>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'; \nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(massage,type)=>{\n    setAlert({\n      msg:massage,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  // const removeBodyClass=()=>{\n  //   document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-success')\n  //   document.body.classList.remove('bg-danger')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-dark')\n  //   document.body.classList.remove('bg-light')\n  // }\n\n  const toggleMode = (cls)=>{\n    // removeBodyClass();\n    // console.log(cls);\n    // document.body.classList.add('bg-'+cls)\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='rgb(11, 11, 73)';\n      showAlert('Dark mode Eanble','success');\n      document.title=\"TextUtils - DarkMode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert('Light mode enable','success');\n      document.title=\"TextUtils - LightMode\";\n    }\n  }\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/About\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}